version: "3.6"

volumes:
  dataelasticsearch: {}
  datapostgres: {}
services:
  postgres:
    build: "./postgres"
    restart: "always"
    environment:
      POSTGRES_DB: "kaiserdb"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - datapostgres:/var/lib/postgresql/data
  nats:
    image: "nats-streaming:0.9.2"
    restart: "always"
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:6.2.3"
    volumes:
      - dataelasticsearch:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 65536
  repository-service:
    build:
      context: "."
      dockerfile: "Dockerfile-Debug"
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    command: "dlv --listen=:40001 --headless=true --api-version=2 exec repository-service"
    depends_on:
      - "postgres"
      - "nats"
    ports:
      - "8080"
      - "40001:40001"
    environment:
      POSTGRES_DB: "kaiserdb"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      NATS_ADDRESS: "nats:4222"
      LOG_LEVEL: "DEBUG"
      SERVICE_PORT: "8080"
  query-service:
    build:
      context: "."
      dockerfile: "Dockerfile-Debug"
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    command: "dlv --listen=:40002 --headless=true --api-version=2 exec query-service"
    depends_on:
      - "postgres"
      - "nats"
      - "elasticsearch"
    ports:
      - "8080"
      - "40002:40002"
    environment:
      POSTGRES_DB: "kaiserdb"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      ELASTICSEARCH_ADDRESS: "elasticsearch:9200"
      LOG_LEVEL: "DEBUG"
      SERVICE_PORT: "8080"
  pusher-service:
    build:
      context: "."
      dockerfile: "Dockerfile-Debug"
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    command: "dlv --listen=:40003 --headless=true --api-version=2 exec pusher-service"
    depends_on:
      - "postgres"
      - "nats"
      - "elasticsearch"
    ports:
      - "8080"
      - "40003:40003"
    environment:
      NATS_ADDRESS: "nats:4222"
      ELASTICSEARCH_ADDRESS: "elasticsearch:9200"
      LOG_LEVEL: "DEBUG"
      SERVICE_PORT: "8080"
  kaiser-service:
    build:
      context: "."
      dockerfile: "Dockerfile-Debug"
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    command: "dlv --listen=:40000 --headless=true --api-version=2 exec kaiser-service"
    depends_on:
      - "postgres"
    ports:
      - "8080"
      - "40000:40000"
    environment:
      POSTGRES_ADDR: "postgres"
      POSTGRES_DB: "kaiserdb"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      NATS_ADDRESS: "nats:4222"
      LOG_LEVEL: "DEBUG"
      SERVICE_PORT: "8080"
  load-balancer:
    build: "./nginx"
    deploy:
      restart_policy:
        condition: on-failure
    ports:
    - "8000:80"
    depends_on:
    - "repository-service"
    - "query-service"
    - "kaiser-service"